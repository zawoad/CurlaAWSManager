/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package curlaawsmanager.edu.cis.uab;

import curlaawsmanager.edu.cis.uab.awshelper.EC2Helper;
import curlaawsmanager.edu.cis.uab.util.ArrayListTableModel;
import curlaawsmanager.edu.cis.uab.handler.EC2FormHandler;
import curlaawsmanager.edu.cis.uab.util.Utility;
import curlaawsmanager.edu.cis.uab.util.ZLogger;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.pushingpixels.substance.api.skin.SubstanceBusinessBlackSteelLookAndFeel;

/**
 *
 * @author zawoad
 */
public class CurlaAWSManager extends javax.swing.JFrame {

    /**
     * Creates new form Manager
     */
    public CurlaAWSManager() {
        initComponents();
        this.setTitle("CURLA: Controller");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jbtShowS3manager = new javax.swing.JButton();
        jbtShowQueuManager = new javax.swing.JButton();
        jbtLocalSource = new javax.swing.JButton();
        jbtDeduplicationResult = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblIntances = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        btnCreateInstance = new javax.swing.JButton();
        txtNoInstance = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbInstanceType = new javax.swing.JComboBox();
        jbtStopInstance = new javax.swing.JButton();
        jbtStartInstance = new javax.swing.JButton();
        jbtAssignFQ = new javax.swing.JButton();
        jbtAssignUpQ = new javax.swing.JButton();
        jbtLoadInstance = new javax.swing.JButton();
        jbtRunCurla = new javax.swing.JButton();
        jbtStopCurla = new javax.swing.JButton();
        jbtShowLog = new javax.swing.JButton();
        jbtClearLog = new javax.swing.JButton();
        jbtAnalyzerConfig = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tpAnalyzer = new javax.swing.JTextPane();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tpController = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtShowS3manager.setText("Manage S3 Source");
        jbtShowS3manager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtShowS3managerActionPerformed(evt);
            }
        });

        jbtShowQueuManager.setText("Manage Queue");
        jbtShowQueuManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtShowQueuManagerActionPerformed(evt);
            }
        });

        jbtLocalSource.setText("Manage Local URL File Source");
        jbtLocalSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLocalSourceActionPerformed(evt);
            }
        });

        jbtDeduplicationResult.setText("Deduplication Result");
        jbtDeduplicationResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeduplicationResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jbtShowQueuManager)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtShowS3manager)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtLocalSource)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtDeduplicationResult)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtShowS3manager, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addComponent(jbtLocalSource, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addComponent(jbtDeduplicationResult, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                    .addComponent(jbtShowQueuManager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Analyzer Instances"));

        jtblIntances.setModel(ec2InstanceTableModel);
        jScrollPane3.setViewportView(jtblIntances);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnCreateInstance.setText("Create Analyzer Instance");
        btnCreateInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateInstanceActionPerformed(evt);
            }
        });

        txtNoInstance.setText("0");
        txtNoInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoInstanceActionPerformed(evt);
            }
        });

        jLabel5.setText("Instance Type");

        jLabel6.setText("Number of Instance");

        cmbInstanceType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "m1.small", "m1.medium","m1.large","m1.xlarge"}));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(btnCreateInstance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(cmbInstanceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNoInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbInstanceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNoInstance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCreateInstance)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtStopInstance.setText("Stop Instance");
        jbtStopInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtStopInstanceActionPerformed(evt);
            }
        });

        jbtStartInstance.setText("Start Instance");
        jbtStartInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtStartInstanceActionPerformed(evt);
            }
        });

        jbtAssignFQ.setText("Assign Fetcher Queue");
        jbtAssignFQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAssignFQActionPerformed(evt);
            }
        });

        jbtAssignUpQ.setText("Assign Uploader Queue");
        jbtAssignUpQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAssignUpQActionPerformed(evt);
            }
        });

        jbtLoadInstance.setText("Load Analyzer List");
        jbtLoadInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLoadInstanceActionPerformed(evt);
            }
        });

        jbtRunCurla.setText("Run CURLA");
        jbtRunCurla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRunCurlaActionPerformed(evt);
            }
        });

        jbtStopCurla.setText("Stop CURLA");
        jbtStopCurla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtStopCurlaActionPerformed(evt);
            }
        });

        jbtShowLog.setText("View Log of Analyzer");
        jbtShowLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtShowLogActionPerformed(evt);
            }
        });

        jbtClearLog.setText("Clear Log of Analyzer");
        jbtClearLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtClearLogActionPerformed(evt);
            }
        });

        jbtAnalyzerConfig.setText("Manage Configuration");
        jbtAnalyzerConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAnalyzerConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtAssignFQ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtAssignUpQ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtLoadInstance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbtStopInstance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtRunCurla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtStopCurla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtStartInstance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtShowLog, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtClearLog, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtAnalyzerConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtLoadInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtRunCurla)
                    .addComponent(jbtStopCurla, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtStopInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtStartInstance, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtAssignFQ, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtAssignUpQ, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtShowLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtClearLog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtAnalyzerConfig)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Analyzer Log"));

        tpAnalyzer.setDisabledTextColor(new java.awt.Color(5, 55, 120));
        tpAnalyzer.setEnabled(false);
        jScrollPane4.setViewportView(tpAnalyzer);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 805, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Controller Log"));

        tpController.setBackground(new java.awt.Color(5, 8, 11));
        tpController.setForeground(new java.awt.Color(28, 76, 46));
        tpController.setDisabledTextColor(new java.awt.Color(5, 55, 120));
        jScrollPane5.setViewportView(tpController);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void txtNoInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoInstanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoInstanceActionPerformed

    private void btnCreateInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateInstanceActionPerformed
        try {
            // TODO add your handling code here:
            ec2Helpter.runInstance(1, Integer.parseInt(txtNoInstance.getText()), cmbInstanceType.getSelectedItem().toString());
            loadInstanceList();
            ZLogger.d("Instance created.");
        } catch (Exception ex) {
            ex.printStackTrace();
            ZLogger.e(ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_btnCreateInstanceActionPerformed

    private void jbtStopInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtStopInstanceActionPerformed
        try {
            
            String instance = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 0);
            ec2Helpter.stopInstance(instance);
            ZLogger.d(instance+" Stpped.");
            
        } catch (Exception ex) {
            ex.printStackTrace();
            ZLogger.e(ex.getLocalizedMessage());
        }
    
    }//GEN-LAST:event_jbtStopInstanceActionPerformed

    private void jbtStartInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtStartInstanceActionPerformed
        try {
            // TODO add your handling code here:
            String instance = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 0);
            ec2Helpter.startInstance(instance);
            ZLogger.d(instance+" Started.");
            
        } catch (Exception ex) {
            ex.printStackTrace();
            ZLogger.e(ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_jbtStartInstanceActionPerformed

    private void jbtAssignFQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAssignFQActionPerformed
        try {
            EC2FormHandler.assignQueueToAnalyzer(analyzerList);
            loadInstanceList();
        } catch (Exception ex) {
            ZLogger.e(ex.getLocalizedMessage());
        }
        

    }//GEN-LAST:event_jbtAssignFQActionPerformed

    private void jbtAssignUpQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAssignUpQActionPerformed
        try {
            EC2FormHandler.assignUploaderQueueToAnalyzer(analyzerList);
            loadInstanceList();
        } catch (Exception ex) {
            ZLogger.e(ex.getLocalizedMessage());
        }

    }//GEN-LAST:event_jbtAssignUpQActionPerformed

    private void jbtLoadInstanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLoadInstanceActionPerformed
        // TODO add your handling code here:
       loadInstanceList();
    }//GEN-LAST:event_jbtLoadInstanceActionPerformed

    private void loadInstanceList()
    {
         try{       
           analyzerList = EC2FormHandler.getAllAnalyzers();
            ec2InstanceTableModel.build(EC2FormHandler.getInstanceTableHeader(), analyzerList);
        
        }
        catch(Exception ex)
        {
            ZLogger.e(ex.getLocalizedMessage());
        }
    }
    private void jbtRunCurlaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRunCurlaActionPerformed
        try {
            //      String ip = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 1);
//            String queue = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 3);
//            EC2FormHandler.runCurla(ip, queue);
            EC2FormHandler.runCurlaInAllInstances(analyzerList);
        } catch (Exception ex) {
            ZLogger.e(ex.getLocalizedMessage());
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jbtRunCurlaActionPerformed

    private void jbtStopCurlaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtStopCurlaActionPerformed
        try {
            // TODO add your handling code here:
//          String ip = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 1);
//          EC2FormHandler.stopCurla(ip);
            
            EC2FormHandler.stopCurlaInAllInstances(analyzerList);
        } catch (Exception ex) {
            ZLogger.e(ex.getLocalizedMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jbtStopCurlaActionPerformed

    private void jbtShowLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtShowLogActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            
            String ip = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 1);
            String instance = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 0);
            tpAnalyzer.setText("");
            tpAnalyzer.setText("Instance:"+instance+" IP:"+ip+"\n");
            ZLogger.appendToPane(tpAnalyzer, "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n");
            EC2FormHandler.readAnalyzerLog(ip);
        } catch (Exception ex) {
            ZLogger.e(ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_jbtShowLogActionPerformed

    private void jbtShowS3managerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtShowS3managerActionPerformed
        // TODO add your handling code here:
        S3SourceControlManager jds3Manager = new S3SourceControlManager(this);
                jds3Manager.setLocationRelativeTo(this);
                jds3Manager.show();
    }//GEN-LAST:event_jbtShowS3managerActionPerformed

    private void jbtClearLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtClearLogActionPerformed
        try {
            // TODO add your handling code here:
//        String ip = Utility.getSelectedValueFromTable(ec2InstanceTableModel, jtblIntances, 1);
//        EC2FormHandler.clearAnalyzerLog(ip);
            EC2FormHandler.clearLogAllInstances(analyzerList);
        } catch (Exception ex) {
            ZLogger.e(ex.getLocalizedMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jbtClearLogActionPerformed

    private void jbtShowQueuManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtShowQueuManagerActionPerformed
        // TODO add your handling code here:
        QueueManager jdQueueManager = new QueueManager(this);
                jdQueueManager.setLocationRelativeTo(this);
                jdQueueManager.show();
    }//GEN-LAST:event_jbtShowQueuManagerActionPerformed

    private void jbtAnalyzerConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAnalyzerConfigActionPerformed
        // TODO add your handling code here:
        AnalyzerConfigManager jdAnalyzerManager = new AnalyzerConfigManager(analyzerList, this);
        
                jdAnalyzerManager.setLocationRelativeTo(this);
                jdAnalyzerManager.show();
    }//GEN-LAST:event_jbtAnalyzerConfigActionPerformed

    private void jbtLocalSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLocalSourceActionPerformed
        // TODO add your handling code here:
        FileSourceManager fileSourceManager = new FileSourceManager(this);
                fileSourceManager.setLocationRelativeTo(this);
                fileSourceManager.show();
    }//GEN-LAST:event_jbtLocalSourceActionPerformed

    private void jbtDeduplicationResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeduplicationResultActionPerformed
        // TODO add your handling code here:
        DeduplicationResult dedupRes = new DeduplicationResult(this);
                dedupRes.setLocationRelativeTo(this);
                dedupRes.show();
    }//GEN-LAST:event_jbtDeduplicationResultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurlaAWSManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurlaAWSManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurlaAWSManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurlaAWSManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Manager().setVisible(true);
//            }
//        });
        JFrame.setDefaultLookAndFeelDecorated(true);
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(new SubstanceBusinessBlackSteelLookAndFeel());
                    UIManager.getLookAndFeelDefaults().put("ClassLoader", SubstanceBusinessBlackSteelLookAndFeel.class.getClassLoader());

                } catch (UnsupportedLookAndFeelException e) {
                    e.printStackTrace();
                } catch (Exception e) {
                    System.out.println("Substance Graphite failed to initialize");
                }

                try {
                    UIManager.setLookAndFeel(new SubstanceBusinessBlackSteelLookAndFeel());
                    UIManager.getLookAndFeelDefaults().put("ClassLoader", SubstanceBusinessBlackSteelLookAndFeel.class.getClassLoader());

                } catch (UnsupportedLookAndFeelException e) {
                    e.printStackTrace();
                } catch (Exception e) {
                    System.out.println("Substance Graphite failed to initialize");
                }

                try {
                    CurlaAWSManager m = new CurlaAWSManager();
                    m.setVisible(true);
                } catch (Exception ex) {
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateInstance;
    private javax.swing.JComboBox cmbInstanceType;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton jbtAnalyzerConfig;
    private javax.swing.JButton jbtAssignFQ;
    private javax.swing.JButton jbtAssignUpQ;
    private javax.swing.JButton jbtClearLog;
    private javax.swing.JButton jbtDeduplicationResult;
    private javax.swing.JButton jbtLoadInstance;
    private javax.swing.JButton jbtLocalSource;
    private javax.swing.JButton jbtRunCurla;
    private javax.swing.JButton jbtShowLog;
    private javax.swing.JButton jbtShowQueuManager;
    private javax.swing.JButton jbtShowS3manager;
    private javax.swing.JButton jbtStartInstance;
    private javax.swing.JButton jbtStopCurla;
    private javax.swing.JButton jbtStopInstance;
    private javax.swing.JTable jtblIntances;
    private ArrayListTableModel ec2InstanceTableModel = new ArrayListTableModel(EC2FormHandler.getInstanceTableHeader(), new ArrayList<Object[]>());
    public static javax.swing.JTextPane tpAnalyzer;
    public static javax.swing.JTextPane tpController;
    private javax.swing.JTextField txtNoInstance;
    // End of variables declaration//GEN-END:variables

    private EC2Helper ec2Helpter = EC2Helper.EC2Instance();
    private List<Object[]> analyzerList = new ArrayList<Object[]>();
}
